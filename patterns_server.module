<?php
/*
 * @file
 * Patterns Server module.
 *
 * the module'name is patterns_server.
 */

module_load_include('inc', 'patterns_server', 'theme/theme');

/**
 * Implements hook_help().
 */
function patterns_server_help($path,$arg) {
  switch ($path) {
    case "admin/help#patterns_server":
      return '<p>'.t("help for patterns_server module").'<p>';
      break;
  }
}

/**
 * Implements hook_permission().
 */
function patterns_server_permission() {
  return array(
    'access patterns_server' => array(
      'title' => t('Access permission for the patterns_server module'),
      )
    );
}

/**
 * Implements hook_menu().
 *
 * the path'callback function is _patterns_server_page().
 * second: configure form page.
 */
function patterns_server_menu() {
  $items = array();  
  $items['patterns_server'] = array(
    'title' => 'patterns_server',
    'page callback' => '_patterns_server_page',
    'access arguments' => array('access patterns_server'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['patterns_server/upload'] = array(
    'title' => 'patterns_server',
    'page callback' => 'patterns_server_upload',
    'type' => MENU_CALLBACK,
  );
  
  $items['patterns_server/download'] = array(
    'title' => 'Download Pattern Source',
    'page callback' => 'patterns_server_pattern_download_service',
    'access arguments' => array('get patterns'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );	 

  return $items;
}

/**
 * a function used in the form.
 *
 * Use Database API to retrieve the patterns from patterns table.
 */
function patterns_server_get_pattern_from_db() {
  $result = db_select('patterns', 'p')
                  ->fields('p', array())
                  ->orderBy('updated', 'DESC')
                  ->range(0,10)
                  ->execute()
                  ->fetchAll();

  $patterns = array();

  foreach ($result as $pattern) {
    $patterns[$pattern->pid] = $pattern;
    $data = unserialize($pattern->pattern);
    $patterns[$pattern->pid]->pattern = $data;
    $patterns[$pattern->pid]->info = $data['info'];
  }

//  print_r($patterns);
  return $patterns;
}

/**
 * hook_menu callback function.
 */
function _patterns_server_page() {
  //drupal_add_css(drupal_get_path('module', 'patterns_server') . '/patterns_server.css');
  $result = patterns_server_get_pattern_from_db();
  $page_array = theme('patterns_server_pattern_list',array(
                    'patterns' => $result,
  ));
  return $page_array; 
}

/**
 *
 */
function patterns_server_pattern_download($file, $filename) {
  drupal_add_http_header("Content-type", " text/plain; charset=utf-8");
  drupal_add_http_header("Content-Disposition", "attachment;filename=" . $filename);
  print $file;
  exit;
}

function patterns_server_pattern_download_service($id) {
  $result = db_select('patterns', 'p')
                  ->fields('p')
                  ->condition('p.pid', $id)
                  ->execute()
                  ->fetchAll();
  $result[0]->pattern = unserialize($result[0]->pattern);

  patterns_server_pattern_download(file_get_contents($result[0]->file), $result[0]->name);
  exit;
}
